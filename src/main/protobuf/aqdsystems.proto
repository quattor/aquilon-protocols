package aqdsystems;
import "aqdlocations.proto";

message Host {
	required string hostname = 1;
	optional string fqdn = 2;
	optional string mac = 3;
	optional string ip = 4;
	optional Archetype archetype = 5; // deprecated: look in personality
	optional string dns_domain = 6;
	optional Domain domain = 7;
	optional string status = 8;
	optional Machine machine = 9;
	optional string sysloc = 10;
	optional string type = 11;
	optional Personality personality = 12;
	optional OperatingSystem operating_system = 13;
        optional string cluster = 14;
        repeated Resource resources = 15;
	optional int32 owner_eonid = 16;
}

message Machine {
    optional string name = 1;
    optional string host = 2;
    optional aqdlocations.Location location = 3;
    optional Model model = 4;
    optional string cpu = 5;
    optional int64 memory = 6;
    repeated Disk disks = 7;
    repeated Interface interfaces = 8;
}

message Disk {
    optional string device_name = 1;
    optional int64 capacity = 2;
    optional string disk_type = 3;
}

message Archetype {
    optional string name = 1;
    repeated NamedServiceInstance required_services = 3;
}

message Personality {
    optional string name = 1;
    optional Archetype archetype = 2;
    optional sint32 threshold = 4 [default = -1];
    repeated NamedServiceInstance required_services = 5;
    repeated Feature features = 6;
    optional int32 owner_eonid = 7;
    optional string comments = 8;
    optional bool config_override = 9;
    optional bool cluster_required = 10;
    optional string host_environment = 11;
}

message Domain {
    optional string name = 1;
    optional string owner = 2;
}

message Model {
    optional string name = 1;
    optional string vendor = 2;
}

message Interface {
    optional string device = 1;
    optional string mac = 2;
    optional string ip = 3;
    optional bool bootable = 4;
    optional string interface_type = 5;
    optional int32 network_id = 6;  // This is no longer sent by aqd.
    optional string fqdn = 7;
}

message OperatingSystem {
    optional Archetype archetype = 1;
    optional string name = 2;
    optional string version = 3;
}

message HostList {
    repeated Host hosts = 1;
}

message PersonalityList {
    repeated Personality personalities = 1;
}

message OperatingSystemList {
    repeated OperatingSystem operating_systems = 1;
}

message Cluster {
    required string name = 1;
    optional string status = 3;
    optional Personality personality = 4;
    optional int32 threshold = 5 [default = -1];
    optional bool threshold_is_percent = 6;
    optional int32 maint_threshold = 7 [default = -1];
    optional bool maint_threshold_is_percent = 8;
    optional Domain domain = 9;
    repeated Host hosts = 10;
    repeated Resource resources = 11;
    repeated NamedServiceInstance aligned_services = 12;
    repeated Personality allowed_personalities = 13;
    optional string vm_to_host_ratio = 14;
    optional int32 max_vm_count = 15;
    repeated KeyIntPair limits = 16;
    repeated KeyIntPair usage = 17;
    optional int32 max_members = 18;
}


message KeyIntPair {
    required string name = 1;
    required sint64 value = 2;
    optional bool override = 3 [default = false];
}

message NamedServiceInstance {
    required string service = 1;
    optional string instance = 2;
}

message ClusterList {
    repeated Cluster clusters = 1;
}

message Resource {
    required string name = 1;
    required string type = 2;
    optional Filesystem fsdata = 3;
    optional Application appdata = 4;
    optional Intervention ivdata = 5;
}

message ResourceList {
    repeated Resource resources = 1;
}

message Filesystem {
    optional string fstype = 1;
    optional string mountpoint = 2;
    optional bool mount = 3;
    optional string blockdevice = 4;
    optional string opts = 5;
    optional int32 freq = 6;
    optional int32 passno = 7;
}

message Application {
    optional int32 eonid = 1;
}

message Intervention {
    optional int64 expiry = 1;
    optional string justification = 2;
    optional string users = 3;
    optional string groups = 4;
    optional string disabled = 5;
    optional int64 start = 6;
}

message Feature {
    required string name = 1;
    required string type = 2;
    optional bool post_personality = 3;
    optional Model model = 4;
    optional string interface_name = 5;
}
